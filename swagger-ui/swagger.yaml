---
swagger: "2.0"
info:
  description: "(tbd)"
  version: "1.0.0"
  title: "Band Finder API"
  contact:
    name: "Bernard Hromek"
    url: "http://hromek.github.io/writing-samples/"
    email: "bhromek1@verizon.net"
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/hromek/BandFinder/1.0.0"
tags:
- name: "Accounts"
  description: "Account operations."
- name: "Bands"
  description: "Band operations."
- name: "Musicians"
  description: "Musician operations."
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /accounts:
    get:
      tags:
      - "Accounts"
      summary: "Gets information for all accounts."
      description: "(tbd)"
      parameters: []
      responses:
        200:
          description: "Returns a list of all accounts in the system."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
    post:
      tags:
      - "Accounts"
      summary: "Creates a new account."
      description: "(tbd)"
      parameters:
      - in: "body"
        name: "account"
        description: "(tbd)"
        required: true
        schema:
          $ref: "#/definitions/Account"
      responses:
        200:
          description: "OK."
  /accounts/{id}:
    get:
      tags:
      - "Accounts"
      summary: "Gets information for a specific account"
      description: "(tbd)"
      parameters:
      - name: "id"
        in: "path"
        description: "(tbd)"
        required: true
        type: "integer"
      responses:
        200:
          description: "Returns information for a specific account."
          schema:
            $ref: "#/definitions/Account"
    put:
      tags:
      - "Accounts"
      summary: "Updates account information."
      description: "(tbd)"
      parameters:
      - name: "id"
        in: "path"
        description: "(tbd)"
        required: true
        type: "integer"
      - in: "body"
        name: "account"
        description: "(tbd)"
        required: true
        schema:
          $ref: "#/definitions/Account"
      responses:
        200:
          description: "OK."
  /band:
    get:
      tags:
      - "Bands"
      summary: "Gets band information."
      description: "Returns information for one or more bands based on the query parameters."
      parameters:
      - name: "name"
        in: "query"
        description: "(tbd)"
        required: false
        type: "string"
      - name: "genre"
        in: "query"
        description: "(tbd)"
        required: false
        type: "string"
      - name: "location"
        in: "query"
        description: "(tbd)"
        required: false
        type: "string"
      - name: "instrumentsNeeded"
        in: "query"
        description: "(tbd)"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Returns a list of bands."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Band"
    post:
      tags:
      - "Bands"
      summary: "Creates a new band."
      description: "(tbd)"
      parameters:
      - in: "body"
        name: "band"
        description: "(tbd)"
        required: true
        schema:
          $ref: "#/definitions/Band"
      responses:
        200:
          description: "OK."
  /bands/{id}:
    get:
      tags:
      - "Bands"
      summary: "Gets information for a specific band."
      description: "(tbd)"
      parameters:
      - name: "id"
        in: "path"
        description: "(tbd)"
        required: true
        type: "integer"
      responses:
        200:
          description: "Returns information for a specific band."
          schema:
            $ref: "#/definitions/Band"
    put:
      tags:
      - "Bands"
      summary: "Updates band information."
      description: "(tbd)"
      parameters:
      - name: "id"
        in: "path"
        description: "(tbd)"
        required: true
        type: "integer"
      - in: "body"
        name: "band"
        description: "(tbd)"
        required: true
        schema:
          $ref: "#/definitions/Band"
      responses:
        200:
          description: "OK."
  /musicians:
    get:
      tags:
      - "Musicians"
      summary: "Gets musician information."
      description: "(tbd)"
      parameters:
      - name: "name"
        in: "query"
        description: "(tbd)"
        required: false
        type: "string"
      - name: "genre"
        in: "query"
        description: "(tbd)"
        required: false
        type: "string"
      - name: "location"
        in: "query"
        description: "(tbd)"
        required: false
        type: "string"
      - name: "instumentPlayed"
        in: "query"
        description: "(tbd)"
        required: false
        type: "string"
      responses:
        200:
          description: "OK."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Musician"
    post:
      tags:
      - "Musicians"
      summary: "Creates a musician."
      description: "(tbd)"
      parameters:
      - in: "body"
        name: "musician"
        description: "(tbd)"
        required: true
        schema:
          $ref: "#/definitions/Musician"
      responses:
        200:
          description: "OK."
  /musicians/{id}:
    get:
      tags:
      - "Musicians"
      summary: "Get information for a specific musician."
      description: "(tbd)"
      parameters:
      - name: "id"
        in: "path"
        description: "(tbd)"
        required: true
        type: "integer"
      responses:
        200:
          description: "OK."
    put:
      tags:
      - "Musicians"
      summary: "Updates musician information."
      description: "(tbd)"
      parameters:
      - name: "id"
        in: "path"
        description: "(tbd)"
        required: true
        type: "integer"
      - in: "body"
        name: "musician"
        description: "(tbd)"
        required: true
        schema:
          $ref: "#/definitions/Musician"
      responses:
        200:
          description: "OK."
definitions:
  Account:
    required:
    - "id"
    - "userName"
    properties:
      id:
        type: "integer"
        description: "A unique account identifier."
      userName:
        type: "string"
        description: "Accounts use eEmail addresses for usernames."
    description: "Respresents the information associated with and account. Accounts\
      \ exist independent of bands and musicians."
    example:
      id: 0
      userName: "userName"
  Band:
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        description: "A unique band identifier."
      name:
        type: "string"
        description: "The band name. The application does not require band names to\
          \ be unique."
      genres:
        type: "array"
        description: "Music genres perfomred by the band."
        items:
          type: "string"
      location:
        type: "string"
        description: "The band's home city and state."
      instrumentsNeeded:
        type: "array"
        description: "For bands seeking musician's, a list of one or more instruments\
          \ needed."
        items:
          type: "string"
    description: "Represents an individual band. A band is associated with a single\
      \ account, but an account can be associated with multiple bands."
    example:
      instrumentsNeeded:
      - "instrumentsNeeded"
      - "instrumentsNeeded"
      genres:
      - "genres"
      - "genres"
      name: "name"
      location: "location"
      id: 0
  Musician:
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        description: "A unique musician identifier."
      name:
        type: "string"
        description: "The musician's name."
      genres:
        type: "array"
        description: "Music genres in which the musician is interested."
        items:
          type: "string"
      location:
        type: "string"
        description: "The musician's home city and state."
      instrumentsPlayed:
        type: "array"
        description: "A list of instruments played by the musician."
        items:
          type: "string"
      vocals:
        type: "boolean"
        description: "An indicator if the musician sings."
    description: "Represents a single musician. A musician is assocated with a single\
      \ account and an account is associated with a single musician (a one-to-one\
      \ relationship)."
    example:
      instrumentsPlayed:
      - "instrumentsPlayed"
      - "instrumentsPlayed"
      genres:
      - "genres"
      - "genres"
      name: "name"
      vocals: true
      location: "location"
      id: 0
